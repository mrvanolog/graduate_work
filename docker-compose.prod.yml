version: '3.7'

services:
  api:
    image: ${ASYNC_API_IMAGE}
    container_name: fast_api
    environment:
      ELASTICSEARCH_HOSTS: $ELASTIC_HOST
      REDIS_HOST: $REDIS_HOST
      REDIS_PASSWORD: $REDIS_PASSWORD
    depends_on:
      - elasticsearch
    restart: always
    ports:
      - 8000:8000

  rs:
    image: ${RS_IMAGE}
    container_name: rs
    environment:
      POSTGRES_DATA_DB: $POSTGRES_DATA_DB
      POSTGRES_DATA_HOST: $POSTGRES_DATA_HOST
      POSTGRES_DATA_PORT: $POSTGRES_DATA_PORT
      POSTGRES_DATA_USER: $POSTGRES_DATA_USER
      POSTGRES_DATA_PASSWORD: $POSTGRES_DATA_PASSWORD
      POSTGRES_PREDICTIONS_DB: $POSTGRES_PREDICTIONS_DB
      POSTGRES_PREDICTIONS_HOST: $POSTGRES_PREDICTIONS_HOST
      POSTGRES_PREDICTIONS_PORT: $POSTGRES_PREDICTIONS_PORT
      POSTGRES_PREDICTIONS_USER: $POSTGRES_PREDICTIONS_USER
      POSTGRES_PREDICTIONS_PASSWORD: $POSTGRES_PREDICTIONS_PASSWORD
      SSL_MODE: $SSL_MODE
    restart: always
    ports:
      - 8080:8080

  rs-etl:
    image: ${RS_ETL_IMAGE}
    container_name: rs_etl
    environment:
      POSTGRES_MOVIES_DB: $POSTGRES_MOVIES_DB
      POSTGRES_MOVIES_HOST: $POSTGRES_MOVIES_HOST
      POSTGRES_MOVIES_PORT: $POSTGRES_MOVIES_PORT
      POSTGRES_MOVIES_USER: $POSTGRES_MOVIES_USER
      POSTGRES_MOVIES_PASSWORD: $POSTGRES_MOVIES_PASSWORD

      POSTGRES_UGC_DB: $POSTGRES_UGC_DB
      POSTGRES_UGC_HOST: $POSTGRES_UGC_HOST
      POSTGRES_UGC_PORT: $POSTGRES_UGC_PORT
      POSTGRES_UGC_USER: $POSTGRES_UGC_USER
      POSTGRES_UGC_PASSWORD: $POSTGRES_UGC_PASSWORD

      POSTGRES_DATA_DB: $POSTGRES_DATA_DB
      POSTGRES_DATA_HOST: $POSTGRES_DATA_HOST
      POSTGRES_DATA_PORT: $POSTGRES_DATA_PORT
      POSTGRES_DATA_USER: $POSTGRES_DATA_USER
      POSTGRES_DATA_PASSWORD: $POSTGRES_DATA_PASSWORD
      SSL_MODE: $SSL_MODE
    restart: always


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    container_name: elastic
    environment:
      - discovery.type=single-node
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    expose:
      - 9200
    restart: always

  es_initializer:
    image: ${ES_INITIALIZER_IMAGE}
    container_name: es_initializer
    build: ./conf/elastic
    depends_on:
      - elasticsearch

  etl:
    image: ${ETL_IMAGE}
    container_name: etl
    environment:
      POSTGRES_DB: $POSTGRES_MOVIES_DB
      POSTGRES_HOST: $POSTGRES_MOVIES_HOST
      POSTGRES_PORT: $POSTGRES_MOVIES_PORT
      POSTGRES_USER: $POSTGRES_MOVIES_USER
      POSTGRES_PASSWORD: $POSTGRES_MOVIES_PASSWORD
      SSL_MODE: $SSL_MODE
      ELASTIC_HOST: $ELASTIC_HOST
      REDIS_HOST: $REDIS_HOST
      REDIS_PASSWORD: $REDIS_PASSWORD
      TZ: $TIMEZONE
    restart: always
    depends_on:
      - es_initializer

volumes:
  elasticsearch_data: